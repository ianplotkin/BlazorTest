@page "/categories"
@using BlazorTest.Data
@using BlazorTest.Data.Models 
@using BlazorTest.Utils
@using Microsoft.AspNetCore.Hosting;
@using Radzen; 
@using Radzen.Blazor; 
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
@inject JsConsole jsConsole
@inject IWebHostEnvironment Env
@*
    Using OwningComponentBase ensures that the service and related services
    that share its scope are disposed with the component.
    Otherwise DbContext in ForecastService will live for the life of the
    connection, which may be problematic if clients stay
    connected for a long time.
    We access WeatherForecastService using @Service
*@
@inherits OwningComponentBase<CategoryService>
<h1>Categories</h1>
<!-- AuthorizeView allows us to only show sections of the page -->
<!-- based on the security on the current user -->
<AuthorizeView>
    <!-- Show this section if the user is logged in -->
    <Authorized>
        @if (categories == null)
        {
            <!-- Show this if the current user has no data... yet... -->
            <p><em>Loading...</em></p>
        }
        else
        {
            <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Add" Click="@InsertRow" />
            <RadzenDataGrid @ref="grid" AllowFiltering="true" FilterMode="FilterMode.Simple"
                            Data="@categories" TItem="Category"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="height:400px"
                            EditMode="DataGridEditMode.Single"
                            RowUpdate="@OnUpdateRow"
                            RowCreate="@OnCreateRow">
                <Columns>
                    <RadzenDataGridColumn TItem="Category" Property="Name" Title="Name" >
                        <EditTemplate Context="category">
                            <RadzenTextBox @bind-Value="category.Name" Style="width:100%; display: block" Name="Name" />
                            <RadzenRequiredValidator Text="Name is required" Component="Name" Popup="true" />
                        </EditTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Category" Context="category" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
                        <Template Context="category">
                            <RadzenButton Icon="edit" Size="ButtonSize.Small" Click="@(args => EditRow(category))" @onclick:stopPropagation="true">
                            </RadzenButton>
                        </Template>
                        <EditTemplate Context="category">
                            <RadzenButton Icon="save" Size="ButtonSize.Small" Click="@((args) => SaveRow(category))">
                            </RadzenButton>
                            <RadzenButton Icon="cancel" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => CancelEdit(category))">
                            </RadzenButton>
                        </EditTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Category" Context="category" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                        <Template Context="category">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteRow(category))" @onclick:stopPropagation="true">
                            </RadzenButton>
                        </Template>
                        <EditTemplate Context="category">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteRow(category))">
                            </RadzenButton>
                        </EditTemplate>
                    </RadzenDataGridColumn>

                </Columns>
            </RadzenDataGrid>

            @*<p>
                <button class="btn btn-primary"
                        @onclick="AddNewCategory">
                    Add New Category
                </button>
            </p>*@

        }
    </Authorized>
    <!-- Show this section if the user is not logged in -->
    <NotAuthorized>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

@page "/categories"
@using BlazorTest.Data
@using BlazorTest.Utils
@using Microsoft.AspNetCore.Hosting;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
@inject JsConsole jsConsole
@inject IWebHostEnvironment Env
@*
    Using OwningComponentBase ensures that the service and related services
    that share its scope are disposed with the component.
    Otherwise DbContext in ForecastService will live for the life of the
    connection, which may be problematic if clients stay
    connected for a long time.
    We access WeatherForecastService using @Service
*@
@inherits OwningComponentBase<CategoryService>
<h1>Categories</h1>
<!-- AuthorizeView allows us to only show sections of the page -->
<!-- based on the security on the current user -->
<AuthorizeView>
    <!-- Show this section if the user is logged in -->
    <Authorized>
        @if (categories == null)
        {
            <!-- Show this if the current user has no data... yet... -->
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in categories.OrderBy(c => c.Name))
                    {
                        <tr>
                            <td>@category.Name</td>

                            <td>
                                <!-- Edit the current forecast -->
                                <button class="btn btn-primary"
                                        @onclick="(() => EditCategory(category))">
                                    Edit
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p>
                <button class="btn btn-primary"
                        @onclick="AddNewCategory">
                    Add New Category
                </button>
            </p>
        }
    </Authorized>
    <!-- Show this section if the user is not logged in -->
    <NotAuthorized>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

@if (ShowPopup)
{
    <!-- This is the popup to create or edit a category -->
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Edit Category</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close"
                            @onclick="ClosePopup">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <!-- Edit form for the current category -->
                <div class="modal-body">
                    <input class="form-control" type="text"
                           placeholder="Name"
                           @bind="objCategory.Name" />
                    <br />
                    <!-- Button to save the category -->
                    <button class="btn btn-primary"
                            @onclick="SaveCategory">
                        Save
                    </button>
                    <!-- Only show delete button if not a new record -->
                    @if (objCategory.Id > 0)
                    {
                        <!-- Button to delete the category -->
                        <button class="btn btn-primary"
                                @onclick="DeleteCategory">
                            Delete
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
}
